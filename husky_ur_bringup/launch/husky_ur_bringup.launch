<?xml version="1.0"?>
<launch>
  <!-- General Robot Parameters -->
  <arg name="debug"                   default="false"                                     doc="Debug flag that will get passed on to ur_common.launch"/>
  <arg name="robot_ip"                default="$(optenv HUSKY_UR_IP 192.168.131.40)"      doc="IP address by which the robot can be reached."/>
  <arg name="reverse_ip"              default=""                                          doc="IP of the driver, if set to empty it will detect it automatically."/>
  <arg name="reverse_port"            default="$(optenv HUSKY_UR_REVERSE_PORT 50001)"     doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
  <arg name="script_sender_port"      default="$(optenv HUSKY_UR_SENDER_PORT 50002)"      doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="trajectory_port"         default="$(optenv HUSKY_UR_TRAJECTORY_PORT 50003)"  doc="Port that will be opened by the driver to allow trajectory forwarding."/>
  <arg name="script_command_port"     default="$(optenv HUSKY_UR_COMMAND_PORT 50004)"     doc="Port that will be opened by the driver to allow forwarding script commands to the robot."/>
  <arg name="tf_prefix"               default="ur_arm_"                                   doc="tf_prefix used for the robot."/>
  <arg name="controllers"             default="ur_arm_joint_state_controller ur_arm_scaled_pos_joint_traj_controller ur_arm_speed_scaling_state_controller ur_arm_force_torque_sensor_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers"     default="ur_arm_pos_joint_traj_controller ur_arm_joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <!-- Robot Specific Parameters -->
  <arg name="controller_config_file"  default="$(find husky_ur_bringup)/config/ur_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <arg name="kinematics_config"       default="$(eval optenv('HUSKY_UR_KINEMATICS_CONFIG', find('husky_ur_bringup')+'/config/default_config.yaml'))" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <!-- Wrist Tool Parameters -->
  <arg name="gripper_enabled"         default="$(optenv HUSKY_UR_GRIPPER_ENABLED 0)" />
  <arg name="use_tool_communication"  default="$(optenv HUSKY_UR_GRIPPER_ENABLED 0)" doc="On e-Series robots tool communication can be enabled with this argument"/>
  <arg name="tool_voltage"            default="24"          doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_parity"             default="0"           doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_baud_rate"          default="115200"      doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_stop_bits"          default="1"           doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_rx_idle_chars"      default="1.5"         doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tx_idle_chars"      default="3.5"         doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_device_name"        default="/tmp/ttyTool"  doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true."/>
  <arg name="tool_tcp_port"           default="54321"       doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true."/>
  <arg name="headless_mode"           default="false"       doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
  <arg name="ur_hardware_interface_node_required" default="true"  doc="Shut down ros environment if ur_hardware_interface-node dies."/>
  <!-- Control Launch -->
  <group ns="ur">
    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
      <arg name="debug" value="$(arg debug)"/>
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg controller_config_file)"/>
      <arg name="robot_ip" value="$(arg robot_ip)"/>
      <arg name="reverse_ip" value="$(arg reverse_ip)"/>
      <arg name="reverse_port" value="$(arg reverse_port)"/>
      <arg name="script_sender_port" value="$(arg script_sender_port)"/>
      <arg name="trajectory_port" value="$(arg trajectory_port)"/>
      <arg name="script_command_port" value="$(arg script_command_port)"/>
      <arg name="kinematics_config" value="$(arg kinematics_config)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      <arg name="controllers" value="$(arg controllers)"/>
      <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
      <arg name="headless_mode" value="$(arg headless_mode)"/>
      <arg name="tool_voltage" value="$(arg tool_voltage)"/>
      <arg name="tool_parity" value="$(arg tool_parity)"/>
      <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
      <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
      <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
      <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
      <arg name="tool_device_name" value="$(arg tool_device_name)"/>
      <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
      <arg name="ur_hardware_interface_node_required" value="$(arg ur_hardware_interface_node_required)"/>
    </include>
    <!-- Joint State Relay -->
    <node name="joint_state_relay" type="relay" pkg="topic_tools" args="joint_states /joint_states" />
  </group>
  <!-- Optional: Gripper -->
  <group ns="gripper" if="$(arg gripper_enabled)">
    <include file="$(find robotiq_2f_gripper_control)/launch/robotiq_action_server.launch">
        <arg name="name"        value="gripper_action_server"/>
        <arg name="delay"       value="10"/>
        <arg name="comport"     value="/tmp/ttyTool"/>
        <arg name="joint_name"  value="ur_arm_gripper_finger_joint"/>
    </include>
  </group>
</launch>
